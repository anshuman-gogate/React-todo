{"version":3,"sources":["Components/Todo.js","Components/TodoList.js","Components/Form.js","App.js","index.js"],"names":["Todo","props","console","log","item","checked","className","type","onChange","handleCheck","key","style","fontStyle","color","textDecoration","value","onClick","handleDelete","TodoList","todosArr","todos","map","todo","handleChange","Form","state","tfData","bind","handleSubmit","handleDeleteALL","saveLocalTodos","Prevtodos","localStorage","getItem","JSON","parse","this","setState","localItem","event","target","name","prevState","e","preventDefault","Math","random","id","filter","clear","setItem","stringify","onSubmit","placeholder","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4dbfc8e8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Todo(props) {\r\n    // console.log(props.key)\r\n    const styles = {\r\n        fontStyle: \"italic\",\r\n        color: \"#5f5f5f\",\r\n        textDecoration: \"line-through\"\r\n    };\r\n    console.log(props.item.checked);\r\n    return (\r\n        <div className= \"todo--item\">\r\n           <input \r\n            type=\"checkbox\" \r\n            checked={props.item.checked} \r\n            onChange = {() => props.handleCheck(props.item.key)}\r\n            />\r\n           <p style = {props.item.checked ? styles : null}>{props.item.value}</p>\r\n           <button onClick = {() => props.handleDelete(props.item.key)}><i className='fas fa-trash-alt'></i></button> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\r\nimport Todo from \"./Todo.js\"\r\n\r\nfunction TodoList(props) {\r\n    const styles = {\r\n        margin: 0,\r\n        padding: 0,\r\n        width: \"100%\",\r\n        maxWidth: \"400px\",\r\n        marginLeft: 0,\r\n        marginRight: 0,\r\n        listStyle: \"none\",\r\n        display: \"flex\"\r\n    }\r\n\r\n    const todosArr = props.todos.map(todo => {\r\n        // console.log(todo.key);\r\n        return (\r\n            <Todo \r\n                item = {todo} \r\n                handleChange = {props.handleChange} \r\n                handleCheck = {props.handleCheck} \r\n                key = {todo.key} \r\n                handleDelete = {props.handleDelete}\r\n            />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className= \"todo--list\">\r\n           {todosArr}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import React from \"react\";\r\nimport TodoList from \"./TodoList.js\"\r\n\r\nclass Form extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            tfData: \"\",\r\n            todos: []\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleCheck = this.handleCheck.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        this.handleDeleteALL = this.handleDeleteALL.bind(this);\r\n        this.saveLocalTodos = this.saveLocalTodos.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let Prevtodos;\r\n        if(localStorage.getItem('todos') === null) {\r\n            Prevtodos = [];\r\n        }\r\n        else {\r\n            Prevtodos = JSON.parse(localStorage.getItem('todos'));\r\n        }\r\n\r\n        this.setState({todos: Prevtodos})\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        let localItem = [];\r\n        localItem = this.state.todos;\r\n        this.saveLocalTodos(localItem);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const {name, value } = event.target;\r\n        this.setState(prevState => {\r\n            return {\r\n                [name] : value\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        if(this.state.tfData !== \" \" && this.state.tfData !== \"\" && this.state.tfData !== \"  \")\r\n        {\r\n            this.setState(prevState => {\r\n                const todo = {\r\n                    value: prevState.tfData,\r\n                    checked: false,\r\n                    key: Math.random()*100000\r\n                }\r\n                return (\r\n                    {\r\n                        todos: [...prevState.todos , todo],\r\n                        tfData: \"\"\r\n                    }\r\n                );\r\n            })\r\n        }\r\n        else {\r\n            this.setState({tfData: \"\"});\r\n        }\r\n    }\r\n\r\n    handleCheck(id) {\r\n        this.setState(prevState => {\r\n            const updatedTodos = prevState.todos.map(todo => {\r\n                if(todo.key === id) {\r\n                   return {\r\n                        ...todo ,\r\n                        checked: !todo.checked\r\n                    }\r\n                }\r\n                return todo;\r\n            })\r\n            return {\r\n                todos: updatedTodos\r\n            }\r\n        });\r\n    }\r\n\r\n    handleDelete(id) {\r\n        this.setState(prevState => {\r\n            const updatedTodos = prevState.todos.filter(todo => {\r\n                return todo.key !== id;\r\n            })\r\n            return {\r\n                todos: updatedTodos\r\n            }\r\n        })\r\n    }\r\n\r\n    handleDeleteALL() {\r\n        this.setState({todos: []});\r\n        localStorage.clear();\r\n    }\r\n\r\n    // Testing a local storage function below\r\n    saveLocalTodos(todo) {\r\n        // check below to check if states already exist in the local storage.\r\n        let todos;\r\n        if(localStorage.getItem('todos') === null) {\r\n            todos = [];\r\n        }\r\n        else {\r\n            todos = JSON.parse(localStorage.getItem('todos'));\r\n        }\r\n        todos = todo;\r\n        localStorage.setItem(\"todos\" , JSON.stringify(todos));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className = \"form--container\">\r\n                <form onSubmit= {this.handleSubmit} className=\"input-form\">\r\n                    <input \r\n                        type= \"text\" \r\n                        name=\"tfData\" \r\n                        onChange= {this.handleChange} \r\n                        value={this.state.tfData}\r\n                        placeholder=\"Add a new todo\"\r\n                    />\r\n                    <button ><i className=\"fa fa-plus\"></i></button>\r\n                </form>\r\n                <TodoList \r\n                    todos = {this.state.todos} \r\n                    handleChange = {this.handleChange} \r\n                    handleCheck = {this.handleCheck}\r\n                    handleDelete = {this.handleDelete}\r\n                />\r\n                <button className=\"clearall-btn\" onClick = {this.handleDeleteALL}>Clear All</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","import './App.css';\nimport Form from \"./Components/Form.js\"\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"heading\">\n        <h1>Todo List</h1>\n      </div>\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}